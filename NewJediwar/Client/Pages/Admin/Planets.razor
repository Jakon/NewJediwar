@page "/planets"
@attribute [Authorize]
@inject IPlanetService PlanetService;

<h3>Liste des planètes</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th style="width: 20%">Lignes</th>
            <th style="width: 20%">Colonnes</th>
            <th style="width: 20%">Created At</th>
            <th style="width: 20%">Updated At</th>
            <th style="width: 20%"></th>
        </tr>
    </thead>
    <tbody>
        @if (planets != null)
        {
            foreach (var planet in planets)
            {
                <tr>
                    <td>@planet.Rows</td>
                    <td>@planet.Columns</td>
                    <td>@planet.CreatedAt</td>
                    <td>@planet.UpdatedAt</td>
                    <td style="white-space: nowrap">
                        <NavLink href="@($"planets/edit/{planet.Id}")" class="btn btn-sm btn-primary mr-1">Edit</NavLink>
                        @*<button @onclick="@(() => DeleteUser(user.Id))" disabled="@user.IsDeleting" class="btn btn-sm btn-danger btn-delete-user">
                @if (user.IsDeleting)
                {
                <span class="spinner-border spinner-border-sm"></span>
                }
                else
                {
                <span>Delete</span>
                }
                </button>*@
                    </td>
                </tr>
            }
        }
        @if (loading)
        {
            <tr>
                <td colspan="4" class="text-center">
                    <span class="spinner-border spinner-border-lg align-center"></span>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private bool loading;
    private IList<Planet> planets;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        planets = await PlanetService.GetAll();
        loading = false;
    }
}
